
import Persistencia.Asistencia;
import Persistencia.Curso;
import Persistencia.Persona;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.table.DefaultTableModel;

public class Profesor extends javax.swing.JFrame {

    private ArrayList<Persona> persona;
    private ArrayList<Asistencia> asistencia;
    private ArrayList<Curso> curso;
    public static String nombre;
    
    public Profesor() {
        initComponents();
        
        persona = new ArrayList<>();
        asistencia = new ArrayList<>();
        curso = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();
        cmbFecha = new javax.swing.JComboBox();
        btnRegresar1 = new javax.swing.JButton();
        btnRegresar2 = new javax.swing.JButton();
        cmbCarnet = new javax.swing.JComboBox();
        btnRegresar3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabla.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        btnRegresar.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        cmbFecha.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N

        btnRegresar1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnRegresar1.setText("Buscar");
        btnRegresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresar1ActionPerformed(evt);
            }
        });

        btnRegresar2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnRegresar2.setText("Buscar");
        btnRegresar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresar2ActionPerformed(evt);
            }
        });

        cmbCarnet.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N

        btnRegresar3.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        btnRegresar3.setText("Todo");
        btnRegresar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresar3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 48)); // NOI18N
        jLabel1.setText("Registros");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(cmbFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbCarnet, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegresar2))
                    .addComponent(btnRegresar3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(btnRegresar3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCarnet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRegresar2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRegresar1)))
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tabla.setRowHeight(30);
        
        llenarTabla();
        llenarFechas();
        llenarCarnet();
    }//GEN-LAST:event_formWindowOpened

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Inicio inicio = new Inicio();
        inicio.setLista(persona, asistencia, curso);
        inicio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnRegresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresar1ActionPerformed
        String tipo = (String)cmbFecha.getSelectedItem();

        DefaultTableModel model = (DefaultTableModel)tabla.getModel();
        model.setNumRows(0);

        for(Asistencia a: asistencia){
            if(a.getMaestro().equals(nombre)){
                if(a.getFecha().substring(0, 10).equals(tipo)){
                    model.addRow(new Object[]{a.getMaestro(), a.getCurso(), a.getAlumno(), a.getFecha()});

                }
            }
            
        }
    }//GEN-LAST:event_btnRegresar1ActionPerformed

    private void btnRegresar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresar2ActionPerformed
        String tipo = (String)cmbCarnet.getSelectedItem();

        DefaultTableModel model = (DefaultTableModel)tabla.getModel();
        model.setNumRows(0);

        for(Asistencia a: asistencia){
            if(a.getMaestro().equals(nombre)){
                if(a.getAlumno().equals(tipo)){
                    model.addRow(new Object[]{a.getMaestro(), a.getCurso(), a.getAlumno(), a.getFecha()});

                }
            }
            
        }
    }//GEN-LAST:event_btnRegresar2ActionPerformed

    private void btnRegresar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresar3ActionPerformed
        llenarTabla();
    }//GEN-LAST:event_btnRegresar3ActionPerformed

    public void llenarFechas(){
        ArrayList<String> fecha = new ArrayList<>();
        HashSet hs1 = new HashSet();
        
        for(Asistencia a: asistencia){
            String fech = a.getFecha().substring(0, 10);
            fecha.add(fech);
        }
        
        hs1.addAll(fecha);
        fecha.clear();
        fecha.addAll(hs1);
        
        for(String f: fecha){
            cmbFecha.addItem(f);
        }
    }
    
    public void llenarCarnet(){
        ArrayList<String> nombres = new ArrayList<>();
        HashSet hs = new HashSet();
        
        for(Asistencia a: asistencia){
            String alumno = a.getAlumno();
            nombres.add(alumno);
        }
        
        hs.addAll(nombres);
        nombres.clear();
        nombres.addAll(hs);
        
        for(String n: nombres){
            cmbCarnet.addItem(n);
        }
    }
    
    public void llenarTabla(){
        DefaultTableModel model = (DefaultTableModel)tabla.getModel();
        model.setNumRows(0);
        model.setColumnCount(0);
        
        model.addColumn("MAESTRO");
        model.addColumn("CURSO");
        model.addColumn("ALUMNO");
        model.addColumn("FECHA");
        
        for(Asistencia a: asistencia){
            if(a.getMaestro().equals(nombre)){
                model.addRow(new Object[]{a.getMaestro(), a.getCurso(), a.getAlumno(), a.getFecha()});
            }
        }
    }
    
    public void setLista(ArrayList<Persona> p, ArrayList<Asistencia> a, ArrayList<Curso> c){
        persona = p;
        asistencia = a;
        curso = c;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profesor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnRegresar1;
    private javax.swing.JButton btnRegresar2;
    private javax.swing.JButton btnRegresar3;
    private javax.swing.JComboBox cmbCarnet;
    private javax.swing.JComboBox cmbFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
